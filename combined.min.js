const firebaseConfig={apiKey: "AIzaSyC1Q9tIEHLqAKZj6IjJN8aPiQCAPYbsi7I",authDomain: "giki-chronicles.firebaseapp.com",projectId: "giki-chronicles",storageBucket: "giki-chronicles.firebasestorage.app",messagingSenderId: "80968785263",appId: "1:80968785263:web:666d2e69fef2ef6f5a5c9a"};firebase.initializeApp(firebaseConfig);const auth=firebase.auth();const db=firebase.firestore();let userDocumentCreated=false;let authStateInitialized=false;auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL) .catch((error)=>{console.error("Error setting auth persistence:",error);});const syncUserData=async (user)=>{if (!user || !user.uid || !user.email){return false;}try{const userInfo={uid: user.uid,email: user.email,displayName: user.displayName || user.email?.split('@')[0] || 'User',photoURL: user.photoURL || '',lastSignIn: new Date().toISOString()};localStorage.setItem('currentUser',JSON.stringify(userInfo));const userDoc=await db.collection('users').doc(user.uid).get();if (!userDoc.exists && !userDocumentCreated){const userData={uid: user.uid,email: user.email,displayName: user.displayName || user.email?.split('@')[0] || 'User',photoURL: user.photoURL || '',createdAt: firebase.firestore.FieldValue.serverTimestamp(),lastUpdated: firebase.firestore.FieldValue.serverTimestamp()};if (typeof isAdminUID==='function' && isAdminUID(user.uid)){userData.isAdmin=true;}await db.collection('users').doc(user.uid).set(userData);userDocumentCreated=true;}else if (userDoc.exists){await db.collection('users').doc(user.uid).update({email: user.email,displayName: user.displayName || user.email?.split('@')[0] || 'User',photoURL: user.photoURL || '',lastUpdated: firebase.firestore.FieldValue.serverTimestamp()});}return true;}catch (error){console.error("Error syncing user data:",error);return false;}};auth.onAuthStateChanged(async (user)=>{if (user){if (!user.uid || !user.email){return;}await syncUserData(user);}else{localStorage.removeItem('currentUser');userDocumentCreated=false;}authStateInitialized=true;window.dispatchEvent(new CustomEvent('authStateChanged',{detail:{user: user,initialized: true}}));});const ensureUserDataLoaded=async ()=>{const currentUser=auth.currentUser;if (!currentUser){return false;}const storedUser=localStorage.getItem('currentUser');if (!storedUser){return await syncUserData(currentUser);}try{const parsedUser=JSON.parse(storedUser);if (parsedUser.uid !==currentUser.uid){return await syncUserData(currentUser);}return true;}catch (error){console.error("Error parsing stored user data:",error);return await syncUserData(currentUser);}};window.ensureUserDataLoaded=ensureUserDataLoaded;const ADMIN_UIDS=[ "DNDjKZRt0yQNh4d3inNchRcs0oY2","zCINcUAy84aMwHF83wlRUTO2Dn32","gn2AlkdswANjVg58rUXOLoPaX192" ];function isAdminUID(uid){return ADMIN_UIDS.includes(uid);}function getAdminUIDs(){return [...ADMIN_UIDS];}window.isAdminUID=isAdminUID;window.getAdminUIDs=getAdminUIDs;window.ADMIN_UIDS=ADMIN_UIDS;async function signUpUser(email,password){try{const userCredential=await auth.createUserWithEmailAndPassword(email,password);const user=userCredential.user;const userData={uid: user.uid,email: user.email,displayName: email.split('@')[0],photoURL: '',createdAt: firebase.firestore.FieldValue.serverTimestamp()};if (typeof isAdminUID==='function' && isAdminUID(user.uid)){userData.isAdmin=true;}await db.collection('users').doc(user.uid).set(userData);return{success: true,user: user};}catch (error){console.error("Sign-up Error:",error);return{success: false,error: error.message};}}async function signInWithGoogle(){try{const provider=new firebase.auth.GoogleAuthProvider();const result=await auth.signInWithPopup(provider);const user=result.user;try{const userDoc=await db.collection('users').doc(user.uid).get();if (userDoc.exists){const userData=userDoc.data();if (userData.isBlocked){await auth.signOut();return{success: false,error: "Your account has been blocked. Please contact an administrator for assistance."};}}}catch (firestoreError){console.error("Error checking user status:",firestoreError);}const userData={uid: user.uid,email: user.email,displayName: user.displayName,photoURL: user.photoURL};if (typeof isAdminUID==='function' && isAdminUID(user.uid)){userData.isAdmin=true;}await db.collection('users').doc(user.uid).set(userData,{merge: true});return{success: true,user: user};}catch (error){console.error("Google Sign-in Error:",error);return{success: false,error: error.message};}}async function loginUser(email,password){try{const userCredential=await auth.signInWithEmailAndPassword(email,password);const user=userCredential.user;try{const userDoc=await db.collection('users').doc(user.uid).get();if (userDoc.exists){const userData=userDoc.data();if (userData.isBlocked){await auth.signOut();return{success: false,error: "Your account has been blocked. Please contact an administrator for assistance."};}}}catch (firestoreError){console.error("Error checking user status:",firestoreError);}try{const userDoc=await db.collection('users').doc(user.uid).get();if (!userDoc.exists){const userData={uid: user.uid,email: user.email || email,displayName: user.displayName || email.split('@')[0],photoURL: user.photoURL || '',createdAt: firebase.firestore.FieldValue.serverTimestamp()};if (typeof isAdminUID==='function' && isAdminUID(user.uid)){userData.isAdmin=true;}await db.collection('users').doc(user.uid).set(userData);}}catch (firestoreError){console.error("Error ensuring user document exists:",firestoreError);}return{success: true,user: user};}catch (error){console.error("Login Error:",error);return{success: false,error: error.message};}}async function logoutUser(){try{await auth.signOut();return{success: true};}catch (error){console.error("Logout Error:",error);return{success: false,error: error.message};}}function onAuthStateChange(callback){return auth.onAuthStateChanged(callback);}async function isUserAdmin(){const user=auth.currentUser;if (!user) return false;try{if (typeof window.ensureUserDataLoaded==='function'){await window.ensureUserDataLoaded();}const userDoc=await db.collection('users').doc(user.uid).get();if (!userDoc.exists){return false;}const userData=userDoc.data();const isAdmin=userData.isAdmin===true;return isAdmin;}catch (error){console.error("Error checking admin status:",error);return false;}}async function getGalleryPhotos(status="approved",page=0,limit=12){try{let query;if (status==="all"){query=db.collection("galleryPhotos") .orderBy("createdAt","desc");}else{query=db.collection("galleryPhotos") .where("status","==",status) .orderBy("createdAt","desc");}if (page > 0){let prevPageQuery;if (status==="all"){prevPageQuery=db.collection("galleryPhotos") .orderBy("createdAt","desc") .limit(page*limit);}else{prevPageQuery=db.collection("galleryPhotos") .where("status","==",status) .orderBy("createdAt","desc") .limit(page*limit);}const prevPageSnapshot=await prevPageQuery.get();const lastDoc=prevPageSnapshot.docs[prevPageSnapshot.docs.length-1];if (lastDoc){query=query.startAfter(lastDoc);}}const snapshot=await query.limit(limit).get();const photos=snapshot.docs.map(doc=> ({id: doc.id,...doc.data()}));return{success: true,photos};}catch (error){console.error("Error fetching gallery photos:",error);return{success: false,error: "Could not load photos."};}}async function getHighlightedPhotos(){try{const snapshot=await db.collection("galleryPhotos") .where("status","==","approved") .where("isHighlighted","==",true) .get();const photos=snapshot.docs.map(doc=> ({id: doc.id,...doc.data()}));photos.sort((a,b)=>{const at=a.createdAt?.toDate ? a.createdAt.toDate() : new Date(a.createdAt || 0);const bt=b.createdAt?.toDate ? b.createdAt.toDate() : new Date(b.createdAt || 0);return bt-at;});return{success: true,photos};}catch (error){console.error("Error fetching highlighted photos:",error);return{success: false,error: "Could not load highlighted photos."};}}async function togglePhotoHighlight(photoId,isHighlighted){try{await db.collection("galleryPhotos").doc(photoId).update({isHighlighted: isHighlighted});return{success: true};}catch (error){console.error("Error toggling photo highlight:",error);return{success: false,error: "Could not update photo status."};}}async function submitPhotoForReview(caption,category,file){const user=auth.currentUser;if (!user) return{success: false,error: "You must be logged in to submit a photo."};try{const cloudName="dfkpmldma";const uploadPreset="giki-chronicles";const url=`https: const formData=new FormData();formData.append("file",file);formData.append("upload_preset",uploadPreset);const response=await fetch(url,{method: "POST",body: formData,});if (!response.ok){let detail='';try{detail=await response.text();}catch (_){}throw new Error(`Image upload failed${detail ? `: ${detail}` : ''}`);}const data=await response.json();if (!data.secure_url){throw new Error(`Upload response missing URL${data.error?.message ? `: ${data.error.message}` : ''}`);}const imageUrl=data.secure_url;const cloudinaryId=data.public_id;const fullSizeUrl=imageUrl;await db.collection("galleryPhotos").add({imageUrl,fullSizeUrl,caption,category,uploaderId: user.uid,uploaderName: user.displayName || user.email,cloudinaryId,isHighlighted: false,status: "pending",createdAt: firebase.firestore.FieldValue.serverTimestamp(),});return{success: true,message: "Photo submitted for review!"};}catch (error){console.error("Error submitting photo:",error);return{success: false,error: "Failed to submit photo."};}}async function getGalleryPhotosByStatus(status,page=0,limit=12){try{let query=db.collection("galleryPhotos") .where("status","==",status) .orderBy("createdAt","desc");if (page > 0){const prevPageQuery=db.collection("galleryPhotos") .where("status","==",status) .orderBy("createdAt","desc") .limit(page*limit);const prevPageSnapshot=await prevPageQuery.get();const lastDoc=prevPageSnapshot.docs[prevPageSnapshot.docs.length-1];if (lastDoc){query=query.startAfter(lastDoc);}}const snapshot=await query.limit(limit).get();const photos=snapshot.docs.map(doc=> ({id: doc.id,...doc.data()}));return{success: true,photos};}catch (error){console.error(`Error fetching ${status}gallery photos:`,error);return{success: false,error: `Could not load ${status}photos.`};}}async function updateGalleryPhotoStatus(photoId,newStatus,options={}){const user=auth.currentUser;if (!user) return{success: false,error: "Authentication required."};try{const updateData={status: newStatus,reviewedAt: firebase.firestore.FieldValue.serverTimestamp(),reviewedBy: user.uid};if (typeof options.isHighlighted==='boolean'){updateData.isHighlighted=options.isHighlighted;}if (newStatus==="rejected" && options.rejectionReason){updateData.rejectionReason=options.rejectionReason;}await db.collection("galleryPhotos").doc(photoId).update(updateData);return{success: true};}catch (error){console.error("Error updating gallery photo status:",error);return{success: false,error: "Could not update status."};}}async function deleteGalleryPhoto(photoId,cloudinaryId){const user=auth.currentUser;if (!user) return{success: false,error: "Authentication required."};try{if (cloudinaryId){const cloudName="dfkpmldma";const url=`https: const formData=new FormData();formData.append("public_id",cloudinaryId);const response=await fetch(url,{method: "POST",body: formData,});if (!response.ok){console.warn("Failed to delete from Cloudinary,but continuing with Firestore deletion");}}await db.collection("galleryPhotos").doc(photoId).delete();return{success: true,message: "Photo deleted successfully."};}catch (error){console.error("Error deleting gallery photo:",error);return{success: false,error: "Could not delete photo."};}}async function getGalleryStats(){try{const [approved,pending,rejected]=await Promise.all([ db.collection("galleryPhotos").where("status","==","approved").get(),db.collection("galleryPhotos").where("status","==","pending").get(),db.collection("galleryPhotos").where("status","==","rejected").get() ]);return{success: true,stats:{approved: approved.size,pending: pending.size,rejected: rejected.size,total: approved.size+pending.size+rejected.size}};}catch (error){console.error("Error fetching gallery stats:",error);return{success: false,error: "Could not load statistics."};}}async function getPendingGalleryPhotos(){return getGalleryPhotosByStatus("pending");}let currentPhotoStatus='approved';let currentPhoto=null;let isAdmin=false;let currentPage=0;const PHOTOS_PER_PAGE=12;let hasMorePhotos=true;let isLoading=false;async function initializeGalleryAdmin(){const user=auth.currentUser;if (!user) return;try{const adminCheck=await isUserAdmin();isAdmin=adminCheck;if (isAdmin){showAdminInterface();loadAdminStats();}}catch (error){console.error('Error checking admin status:',error);}}function showAdminInterface(){const adminPhotoTabs=document.getElementById('admin-photo-tabs');const adminStats=document.getElementById('admin-stats');if (adminPhotoTabs){adminPhotoTabs.classList.remove('hidden');adminPhotoTabs.classList.add('hidden','md:flex');}if (adminStats){adminStats.classList.remove('hidden');adminStats.classList.add('hidden','md:block');}const tabApproved=document.getElementById('tab-approved');const tabPending=document.getElementById('tab-pending');const tabRejected=document.getElementById('tab-rejected');if (tabApproved){tabApproved.addEventListener('click',()=> switchPhotoTab('approved'));tabApproved.classList.add('bg-green-200');}if (tabPending){tabPending.addEventListener('click',()=> switchPhotoTab('pending'));}if (tabRejected){tabRejected.addEventListener('click',()=> switchPhotoTab('rejected'));}}async function switchPhotoTab(status){currentPhotoStatus=status;const adminPhotoTabs=document.querySelector('#admin-photo-tabs');if (adminPhotoTabs){adminPhotoTabs.querySelectorAll('button').forEach(btn=>{btn.classList.remove('bg-green-200','bg-yellow-200','bg-red-200');});const activeTab=document.getElementById(`tab-${status}`);if (activeTab){if (status==='approved') activeTab.classList.add('bg-green-200');else if (status==='pending') activeTab.classList.add('bg-yellow-200');else if (status==='rejected') activeTab.classList.add('bg-red-200');}}await loadPhotosByStatus(status);}async function loadPhotosByStatus(status,page=0,append=false){if (isLoading) return;isLoading=true;try{const result=await getGalleryPhotosByStatus(status,page,PHOTOS_PER_PAGE);if (result.success){if (append){appendPhotoGrid(result.photos,status);}else{renderPhotoGrid(result.photos,status);}hasMorePhotos=result.photos.length===PHOTOS_PER_PAGE;currentPage=page;}else{console.error('Error loading photos:',result.error);}}catch (error){console.error('Error loading photos:',error);}finally{isLoading=false;}}async function loadMorePhotos(){if (!hasMorePhotos || isLoading) return;const nextPage=currentPage+1;await loadPhotosByStatus(currentPhotoStatus,nextPage,true);}function renderPhotoGrid(photos,status){const grid=document.getElementById('gallery-grid');if (!grid){return;}grid.innerHTML='';if (photos.length===0){grid.innerHTML=` <div class="col-span-full text-center py-12 text-gray-500"> <svg class="w-16 h-16 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path> </svg> <h3 class="text-xl font-semibold mb-2">No ${status}photos</h3> <p>There are no ${status}photos to display.</p> </div> `;return;}photos.forEach(photo=>{const photoCard=createPhotoCard(photo,status);grid.appendChild(photoCard);});if (hasMorePhotos){addLoadMoreButton();}initializeLazyLoading();}function appendPhotoGrid(photos,status){const grid=document.getElementById('gallery-grid');if (!grid){return;}const existingLoadMore=grid.querySelector('.load-more-container');if (existingLoadMore){existingLoadMore.remove();}photos.forEach(photo=>{const photoCard=createPhotoCard(photo,status);grid.appendChild(photoCard);});if (hasMorePhotos){addLoadMoreButton();}initializeLazyLoading();}function addLoadMoreButton(){const grid=document.getElementById('gallery-grid');if (!grid){return;}const loadMoreContainer=document.createElement('div');loadMoreContainer.className='load-more-container col-span-full text-center py-8';loadMoreContainer.innerHTML=` <button onclick="loadMorePhotos()" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"> Load More Photos </button> `;grid.appendChild(loadMoreContainer);}function createPhotoCard(photo,status){const card=document.createElement('div');card.className='bg-white rounded-xl shadow-lg overflow-hidden transform hover:-translate-y-2 transition-transform duration-300';const photoDate=photo.createdAt ? photo.createdAt.toDate().toLocaleDateString() : 'N/A';const statusBadge=getStatusBadge(status);const imageUrl=photo.imageUrl;let optimizedImageUrl=imageUrl;if (imageUrl.includes('cloudinary')){if (imageUrl.includes('/upload/')){optimizedImageUrl=imageUrl.replace('/upload/','/upload/c_scale,w_400,q_auto,f_auto/');}else{optimizedImageUrl=imageUrl;}}card.innerHTML=` <div class="relative"> <img class="h-48 w-full object-cover cursor-pointer" loading="lazy" src="data:image/svg+xml,%3Csvg xmlns='http: data-src="${optimizedImageUrl}" alt="${photo.caption}" onclick="openPhotoReview('${photo.id}')"> ${statusBadge}<div class="absolute top-2 right-2 flex space-x-2"> ${status==='pending' ? ` <button onclick="approvePhoto('${photo.id}')" class="bg-green-500 text-white p-2 rounded-full hover:bg-green-600 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path> </svg> </button> <button onclick="rejectPhoto('${photo.id}')" class="bg-red-500 text-white p-2 rounded-full hover:bg-red-600 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> ` : ''}<button onclick="deletePhoto('${photo.id}','${photo.cloudinaryId}')" class="bg-gray-500 text-white p-2 rounded-full hover:bg-gray-600 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path> </svg> </button> </div> </div> <div class="p-6"> <div class="flex items-center justify-between mb-2"> <p class="text-sm text-gray-500">${photoDate}• by ${photo.uploaderName}</p> <span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">${photo.category}</span> </div> <h4 class="text-xl font-semibold mb-3">${photo.caption}</h4> ${photo.rejectionReason ? `<p class="text-sm text-red-600 mb-2"><strong>Rejection Reason:</strong> ${photo.rejectionReason}</p>` : ''}<button onclick="openPhotoReview('${photo.id}')" class="font-semibold text-blue-600 hover:underline">View Details &rarr;</button> </div> `;return card;}function getStatusBadge(status){const badges={approved: '<span class="absolute top-2 left-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full">Approved</span>',pending: '<span class="absolute top-2 left-2 bg-yellow-500 text-white text-xs px-2 py-1 rounded-full">Pending</span>',rejected: '<span class="absolute top-2 left-2 bg-red-500 text-white text-xs px-2 py-1 rounded-full">Rejected</span>'};return badges[status] || '';}async function loadAdminStats(){const result=await getGalleryStats();if (result.success){const stats=result.stats;const statsApproved=document.getElementById('stats-approved');const statsPending=document.getElementById('stats-pending');const statsRejected=document.getElementById('stats-rejected');if (statsApproved){statsApproved.textContent=`Approved: ${stats.approved}`;}if (statsPending){statsPending.textContent=`Pending: ${stats.pending}`;}if (statsRejected){statsRejected.textContent=`Rejected: ${stats.rejected}`;}const adminStatsApproved=document.getElementById('stats-approved-photos');const adminStatsPending=document.getElementById('stats-pending-photos');const adminStatsRejected=document.getElementById('stats-rejected-photos');if (adminStatsApproved){adminStatsApproved.textContent=stats.approved;}if (adminStatsPending){adminStatsPending.textContent=stats.pending;}if (adminStatsRejected){adminStatsRejected.textContent=stats.rejected;}}}async function openPhotoReview(photoId){try{const doc=await db.collection("galleryPhotos").doc(photoId).get();if (!doc.exists){alert('Photo not found');return;}currentPhoto={id: photoId,...doc.data()};const modal=document.getElementById('admin-review-modal');const content=document.getElementById('review-photo-content');if (!modal || !content){return;}content.innerHTML=` <div class="text-center"> <img src="${currentPhoto.fullSizeUrl}" alt="${currentPhoto.caption}" class="max-w-full h-auto rounded-lg shadow-lg"> </div> <div class="space-y-4"> <div> <h3 class="font-semibold text-lg">${currentPhoto.caption}</h3> <p class="text-gray-600">${currentPhoto.category}</p> </div> <div class="grid grid-cols-2 gap-4 text-sm"> <div> <strong>Uploaded by:</strong> ${currentPhoto.uploaderName}</div> <div> <strong>Date:</strong> ${currentPhoto.createdAt ? currentPhoto.createdAt.toDate().toLocaleDateString() : 'N/A'}</div> <div> <strong>Status:</strong> <span class="capitalize">${currentPhoto.status}</span> </div> ${currentPhoto.rejectionReason ? ` <div class="col-span-2"> <strong>Rejection Reason:</strong> ${currentPhoto.rejectionReason}</div> ` : ''}</div> <div class="flex items-center space-x-4"> <label class="flex items-center"> <input type="checkbox" id="highlight-photo" ${currentPhoto.isHighlighted ? 'checked' : ''}class="mr-2"> <span>Highlight in slideshow</span> </label> </div> </div> `;modal.classList.remove('hidden');const approveBtn=document.getElementById('approve-photo-btn');const rejectBtn=document.getElementById('reject-photo-btn');const closeBtn=document.getElementById('close-review-modal');if (approveBtn) approveBtn.onclick=()=> approvePhoto(currentPhoto.id);if (rejectBtn) rejectBtn.onclick=()=> rejectPhoto(currentPhoto.id);if (closeBtn) closeBtn.onclick=()=> modal.classList.add('hidden');}catch (error){console.error('Error opening photo review:',error);alert('Error loading photo details');}}async function approvePhoto(photoId){if (!confirm('Are you sure you want to approve this photo?')) return;const isHighlighted=document.getElementById('highlight-photo')?.checked || false;const result=await updateGalleryPhotoStatus(photoId,'approved',{isHighlighted});if (result.success){alert('Photo approved successfully!');const modal=document.getElementById('admin-review-modal');if (modal){modal.classList.add('hidden');}await switchPhotoTab(currentPhotoStatus);await loadAdminStats();}else{alert('Error approving photo: '+result.error);}}async function rejectPhoto(photoId){const modal=document.getElementById('rejection-modal');if (!modal){return;}modal.classList.remove('hidden');const confirmBtn=document.getElementById('confirm-rejection');const cancelBtn=document.getElementById('cancel-rejection');const reasonInput=document.getElementById('rejection-reason');if (confirmBtn){confirmBtn.onclick=async ()=>{const reason=reasonInput ? reasonInput.value : '';const result=await updateGalleryPhotoStatus(photoId,'rejected',{rejectionReason: reason});if (result.success){alert('Photo rejected successfully!');modal.classList.add('hidden');const adminModal=document.getElementById('admin-review-modal');if (adminModal){adminModal.classList.add('hidden');}if (reasonInput) reasonInput.value='';await switchPhotoTab(currentPhotoStatus);await loadAdminStats();}else{alert('Error rejecting photo: '+result.error);}};}if (cancelBtn){cancelBtn.onclick=()=>{modal.classList.add('hidden');if (reasonInput) reasonInput.value='';};}}async function deletePhoto(photoId,cloudinaryId){const modal=document.getElementById('delete-photo-modal');if (!modal){return;}modal.classList.remove('hidden');const confirmBtn=document.getElementById('confirm-delete');const cancelBtn=document.getElementById('cancel-delete');if (confirmBtn){confirmBtn.onclick=async ()=>{const result=await deleteGalleryPhoto(photoId,cloudinaryId);if (result.success){alert('Photo deleted successfully!');modal.classList.add('hidden');await switchPhotoTab(currentPhotoStatus);await loadAdminStats();}else{alert('Error deleting photo: '+result.error);}};}if (cancelBtn){cancelBtn.onclick=()=>{modal.classList.add('hidden');};}}function initializeLazyLoading(){const imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if (entry.isIntersecting){const img=entry.target;img.src=img.dataset.src;img.classList.remove('lazy');observer.unobserve(img);}});},{rootMargin: '50px 0px',threshold: 0.01});document.querySelectorAll('img[data-src]').forEach(img=>{imageObserver.observe(img);});}document.addEventListener('DOMContentLoaded',()=>{auth.onAuthStateChanged((user)=>{if (user){initializeGalleryAdmin();}});initializeLazyLoading();});document.addEventListener('DOMContentLoaded',()=>{const sidebarToggle=document.getElementById('sidebar-toggle');const sidebar=document.getElementById('sidebar');const sidebarClose=document.getElementById('sidebar-close');const sidebarOverlay=document.getElementById('sidebar-overlay');const mobileMenuButton=document.getElementById('mobile-menu-button');const mobileMenu=document.getElementById('mobile-menu');const homeTab=document.getElementById('home-tab');const eventsTab=document.getElementById('events-tab');const mobileHomeTab=document.getElementById('mobile-home-tab');const mobileEventsTab=document.getElementById('mobile-events-tab');const blogContent=document.getElementById('blog-content');const eventsContent=document.getElementById('events-content');const eventModal=document.getElementById('event-modal');const modalTitle=document.getElementById('modal-title');const modalDate=document.getElementById('modal-date');const modalDescription=document.getElementById('modal-description');const googleCalendarLink=document.getElementById('google-calendar-link');const modalClose=document.getElementById('modal-close');const editEventButton=document.getElementById('edit-event-button');const deleteEventButton=document.getElementById('delete-event-button');const addEventModal=document.getElementById('add-event-modal');const addEventButton=document.getElementById('add-event-button');const addEventModalClose=document.getElementById('add-event-modal-close');const addEventForm=document.getElementById('add-event-form');const editEventModal=document.getElementById('edit-event-modal');const editEventModalClose=document.getElementById('edit-event-modal-close');const editEventForm=document.getElementById('edit-event-form');const deleteConfirmModal=document.getElementById('delete-confirm-modal');const confirmDeleteButton=document.getElementById('confirm-delete-button');const cancelDeleteButton=document.getElementById('cancel-delete-button');let calendarInstance=null;let currentOpenEvent=null;function openEventModal(event){currentOpenEvent=event;const startDate=new Date(event.date);const endDate=new Date(startDate.getTime()+2*60*60*1000);const formatGoogleDate=(date)=> date.toISOString().replace(/-|:|\.\d+/g,'');const googleCalendarUrl=`https: modalTitle.textContent=event.title;modalDate.textContent=startDate.toLocaleString('default',{dateStyle: 'full',timeStyle: 'short'});modalDescription.textContent=event.description;googleCalendarLink.href=googleCalendarUrl;eventModal.classList.remove('hidden');}function closeEventModal(){if (eventModal) eventModal.classList.add('hidden');currentOpenEvent=null;}function openAddEventModal(){if (addEventModal) addEventModal.classList.remove('hidden');}function closeAddEventModal(){if (addEventModal) addEventModal.classList.add('hidden');}function openEditEventModal(event){if (!event) return;const eventDate=new Date(event.date);const localDateTime=new Date(eventDate.getTime()-(eventDate.getTimezoneOffset()*60000)).toISOString().slice(0,16);document.getElementById('edit-event-id').value=event.id;document.getElementById('edit-event-title').value=event.title;document.getElementById('edit-event-date').value=localDateTime;document.getElementById('edit-event-description').value=event.description;closeEventModal();if (editEventModal) editEventModal.classList.remove('hidden');}function closeEditEventModal(){if (editEventModal) editEventModal.classList.add('hidden');}function openDeleteConfirmModal(){closeEventModal();if (deleteConfirmModal) deleteConfirmModal.classList.remove('hidden');}function closeDeleteConfirmModal(){if (deleteConfirmModal) deleteConfirmModal.classList.add('hidden');}function initializeCalendar(){if (calendarInstance){calendarInstance.render();return;}const calendarContainer=document.getElementById('calendar-container');const calendarTitle=document.getElementById('calendar-title');if (calendarContainer && calendarTitle && typeof Calendar !=='undefined'){calendarInstance=new Calendar({container: calendarContainer,titleElement: calendarTitle,onEventClick: openEventModal});document.getElementById('prev-button').addEventListener('click',()=> calendarInstance.previous());document.getElementById('next-button').addEventListener('click',()=> calendarInstance.next());document.getElementById('year-view-button').addEventListener('click',()=> calendarInstance.setView('year'));document.getElementById('month-view-button').addEventListener('click',()=> calendarInstance.setView('month'));document.getElementById('week-view-button').addEventListener('click',()=> calendarInstance.setView('week'));document.getElementById('day-view-button').addEventListener('click',()=> calendarInstance.setView('day'));calendarInstance.render();}else{console.error("Calendar dependencies not found.");}}function switchPage(view){const showEvents=view==='events';if (blogContent){blogContent.classList.toggle('hidden',showEvents);}if (eventsContent){eventsContent.classList.toggle('hidden',!showEvents);}document.querySelectorAll('#home-tab,#mobile-home-tab').forEach(tab=>{if (tab){tab.classList.toggle('text-blue-600',!showEvents);tab.classList.toggle('font-semibold',!showEvents);}});document.querySelectorAll('#events-tab,#mobile-events-tab').forEach(tab=>{if (tab){tab.classList.toggle('text-blue-600',showEvents);tab.classList.toggle('font-semibold',showEvents);}});if (showEvents){initializeCalendar();}if (mobileMenu && !mobileMenu.classList.contains('hidden')){mobileMenu.classList.add('hidden');}}function openSidebar(){if (sidebar) sidebar.classList.remove('-translate-x-full');if (sidebarOverlay) sidebarOverlay.classList.remove('hidden');document.body.style.overflow='hidden';}function closeSidebar(){if (sidebar) sidebar.classList.add('-translate-x-full');if (sidebarOverlay) sidebarOverlay.classList.add('hidden');document.body.style.overflow='';}if (sidebarToggle) sidebarToggle.addEventListener('click',openSidebar);if (sidebarClose) sidebarClose.addEventListener('click',closeSidebar);if (sidebarOverlay) sidebarOverlay.addEventListener('click',closeSidebar);document.querySelectorAll('#sidebar a').forEach(link=>{link.addEventListener('click',()=>{setTimeout(closeSidebar,100);});});const sidebarCalendarDropdownToggle=document.getElementById('sidebar-calendar-dropdown-toggle');const sidebarCalendarDropdown=document.getElementById('sidebar-calendar-dropdown');const sidebarCalendarDropdownArrow=document.getElementById('sidebar-calendar-dropdown-arrow');function toggleCalendarDropdown(){if (sidebarCalendarDropdown && sidebarCalendarDropdownArrow){const isHidden=sidebarCalendarDropdown.classList.contains('hidden');if (isHidden){sidebarCalendarDropdown.classList.remove('hidden');sidebarCalendarDropdownArrow.style.transform='rotate(180deg)';}else{sidebarCalendarDropdown.classList.add('hidden');sidebarCalendarDropdownArrow.style.transform='rotate(0deg)';}}}if (sidebarCalendarDropdownToggle){sidebarCalendarDropdownToggle.addEventListener('click',(e)=>{e.preventDefault();toggleCalendarDropdown();});}if (mobileMenuButton && mobileMenu){mobileMenuButton.addEventListener('click',()=> mobileMenu.classList.toggle('hidden'));}if (homeTab) homeTab.addEventListener('click',(e)=>{e.preventDefault();switchPage('blog');});if (eventsTab) eventsTab.addEventListener('click',(e)=>{e.preventDefault();switchPage('events');});if (mobileHomeTab) mobileHomeTab.addEventListener('click',(e)=>{e.preventDefault();switchPage('blog');});if (mobileEventsTab) mobileEventsTab.addEventListener('click',(e)=>{e.preventDefault();switchPage('events');});if (modalClose) modalClose.addEventListener('click',closeEventModal);if (eventModal) eventModal.addEventListener('click',(e)=>{if (e.target===eventModal) closeEventModal();});if (editEventButton) editEventButton.addEventListener('click',()=> openEditEventModal(currentOpenEvent));if (deleteEventButton) deleteEventButton.addEventListener('click',openDeleteConfirmModal);if (addEventButton) addEventButton.addEventListener('click',openAddEventModal);if (addEventModalClose) addEventModalClose.addEventListener('click',closeAddEventModal);if (addEventModal) addEventModal.addEventListener('click',(e)=>{if (e.target===addEventModal) closeAddEventModal();});if (addEventForm) addEventForm.addEventListener('submit',(e)=>{e.preventDefault();const formData=new FormData(addEventForm);const newEvent={title: formData.get('title'),date: new Date(formData.get('date')).toISOString(),description: formData.get('description')};if (calendarInstance){calendarInstance.addEvent(newEvent);}addEventForm.reset();closeAddEventModal();});if (editEventModalClose) editEventModalClose.addEventListener('click',closeEditEventModal);if (editEventModal) editEventModal.addEventListener('click',(e)=>{if (e.target===editEventModal) closeEditEventModal();});if (editEventForm) editEventForm.addEventListener('submit',(e)=>{e.preventDefault();const formData=new FormData(editEventForm);const updatedEvent={id: parseInt(formData.get('id')),title: formData.get('title'),date: new Date(formData.get('date')).toISOString(),description: formData.get('description')};if (calendarInstance){calendarInstance.editEvent(updatedEvent);}editEventForm.reset();closeEditEventModal();});if (cancelDeleteButton) cancelDeleteButton.addEventListener('click',closeDeleteConfirmModal);if (deleteConfirmModal) deleteConfirmModal.addEventListener('click',(e)=>{if (e.target===deleteConfirmModal) closeDeleteConfirmModal();});if (confirmDeleteButton) confirmDeleteButton.addEventListener('click',()=>{if (calendarInstance && currentOpenEvent){calendarInstance.deleteEvent(currentOpenEvent.id);}closeDeleteConfirmModal();});switchPage('blog');});document.addEventListener('DOMContentLoaded',async ()=>{await new Promise(resolve=> setTimeout(resolve,100));if (typeof window.ensureUserDataLoaded==='function'){try{const currentUser=firebase.auth().currentUser;if (currentUser){await window.ensureUserDataLoaded();}}catch (error){console.error("App.js: Error ensuring user data loaded on page load:",error);}}let quill;if (document.getElementById('editor-container')){const existingEditor=document.querySelector('.ql-editor');if (existingEditor){existingEditor.remove();}const container=document.getElementById('editor-container');container.innerHTML='';quill=new Quill('#editor-container',{theme: 'snow',placeholder: 'Craft your story here...',modules:{toolbar: [[{'header': [1,2,3,false]}],['bold','italic','underline'],[{'list': 'ordered'},{'list': 'bullet'}],['link','image'],['clean']]}});}const loginForm=document.getElementById('login-form');if (loginForm){loginForm.addEventListener('submit',async (e)=>{e.preventDefault();const result=await loginUser(loginForm.email.value,loginForm.password.value);if (result.success) window.location.href='index.html';else document.getElementById('error-message').textContent=result.error;});}const signupForm=document.getElementById('signup-form');if (signupForm){signupForm.addEventListener('submit',async (e)=>{e.preventDefault();const result=await signUpUser(signupForm.email.value,signupForm.password.value);if (result.success) window.location.href='index.html';else document.getElementById('error-message').textContent=result.error;});}const googleSignInButton=document.getElementById('google-signin-button');if (googleSignInButton){googleSignInButton.addEventListener('click',async ()=>{const result=await signInWithGoogle();if (result.success) window.location.href='index.html';else if (document.getElementById('error-message')) document.getElementById('error-message').textContent=result.error;});}const postForm=document.getElementById('post-form');if (postForm){const clearFormMessage=()=>{const formMessage=document.getElementById('form-message');if (formMessage && formMessage.textContent.includes('submitted successfully')){return;}if (formMessage && formMessage.textContent){formMessage.textContent='';formMessage.className='text-center min-h-[1.25rem] py-2 px-3 rounded-lg transition-all duration-300';}};const titleInput=document.getElementById('post-title');if (titleInput){titleInput.addEventListener('input',clearFormMessage);}if (quill){quill.on('text-change',clearFormMessage);}const urlParams=new URLSearchParams(window.location.search);const postIdToEdit=urlParams.get('edit');if (postIdToEdit){document.getElementById('page-title').textContent='Edit Your Post';document.getElementById('page-subtitle').textContent='Make your changes and resubmit for review.';document.getElementById('submit-post-button').textContent='Update Post';document.getElementById('post-id').value=postIdToEdit;const loadPostForEditing=async ()=>{const result=await getPostForEditing(postIdToEdit);if (result.success){const post=result.post;document.getElementById('post-title').value=post.title;document.getElementById('post-description').value=post.description || '';document.getElementById('post-photo-url').value=post.photoUrl || '';document.getElementById('post-genre').value=post.genre || 'General';document.getElementById('post-tags').value=post.tags ? post.tags.join(',') : '';quill.root.innerHTML=post.content;if (post.photoUrl){if (urlTab && uploadTab){urlTab.click();}}}else{document.getElementById('form-message').textContent=result.error;}};loadPostForEditing();}let uploadedImageUrl=null;const urlTab=document.getElementById('url-tab');const uploadTab=document.getElementById('upload-tab');const urlSection=document.getElementById('url-section');const uploadSection=document.getElementById('upload-section');if (urlTab && uploadTab){urlTab.addEventListener('click',()=>{urlTab.className='flex-1 py-2 px-3 text-sm font-medium bg-blue-600 text-white transition-colors';uploadTab.className='flex-1 py-2 px-3 text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors';urlSection.classList.remove('hidden');uploadSection.classList.add('hidden');uploadedImageUrl=null;});uploadTab.addEventListener('click',()=>{uploadTab.className='flex-1 py-2 px-3 text-sm font-medium bg-blue-600 text-white transition-colors';urlTab.className='flex-1 py-2 px-3 text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors';uploadSection.classList.remove('hidden');urlSection.classList.add('hidden');document.getElementById('post-photo-url').value='';});}const fileInput=document.getElementById('post-photo-file');const uploadProgress=document.getElementById('upload-progress');const progressBar=document.getElementById('progress-bar');const progressText=document.getElementById('progress-text');const uploadStatus=document.getElementById('upload-status');const uploadPreview=document.getElementById('upload-preview');const previewImage=document.getElementById('preview-image');const uploadedUrlSpan=document.getElementById('uploaded-url');const removeUploadBtn=document.getElementById('remove-upload');const uploadZone=document.querySelector('.border-dashed');const uploadImage=async (file)=>{if (!file.type.startsWith('image/')){alert('Please select a valid image file.');return;}if (file.size > 10*1024*1024){alert('File size must be less than 10MB.');return;}uploadProgress.classList.remove('hidden');uploadStatus.textContent='Uploading to Cloudinary...';try{const cloudName="dfkpmldma";const uploadPreset="giki-chronicles";const url=`https: const formData=new FormData();formData.append("file",file);formData.append("upload_preset",uploadPreset);let progress=0;const progressInterval=setInterval(()=>{progress+=Math.random()*15;if (progress > 90) progress=90;progressBar.style.width=`${progress}%`;progressText.textContent=`${Math.round(progress)}%`;},200);const response=await fetch(url,{method: "POST",body: formData,});clearInterval(progressInterval);if (!response.ok){throw new Error(`Upload failed: ${response.status}`);}const data=await response.json();uploadedImageUrl=data.secure_url;progressBar.style.width='100%';progressText.textContent='100%';uploadStatus.textContent='Upload complete!';previewImage.src=uploadedImageUrl;uploadedUrlSpan.textContent=uploadedImageUrl;uploadPreview.classList.remove('hidden');setTimeout(()=>{uploadProgress.classList.add('hidden');},2000);}catch (error){console.error('Upload error:',error);uploadStatus.textContent='Upload failed. Please try again.';progressBar.style.width='0%';progressText.textContent='0%';setTimeout(()=>{uploadProgress.classList.add('hidden');},3000);}};if (fileInput){fileInput.addEventListener('change',async (e)=>{const file=e.target.files[0];if (!file) return;await uploadImage(file);});}if (uploadZone){uploadZone.addEventListener('dragover',(e)=>{e.preventDefault();uploadZone.classList.add('dragover');});uploadZone.addEventListener('dragleave',(e)=>{e.preventDefault();uploadZone.classList.remove('dragover');});uploadZone.addEventListener('drop',async (e)=>{e.preventDefault();uploadZone.classList.remove('dragover');const files=e.dataTransfer.files;if (files.length > 0){await uploadImage(files[0]);}});}if (removeUploadBtn){removeUploadBtn.addEventListener('click',()=>{uploadedImageUrl=null;fileInput.value='';uploadPreview.classList.add('hidden');uploadProgress.classList.add('hidden');});}postForm.addEventListener('submit',async (e)=>{e.preventDefault();const formMessage=document.getElementById('form-message');if (!quill || quill.getLength() <=1){formMessage.textContent='Please write some content for your post.';formMessage.className='text-center h-5 text-red-600 font-medium';return;}formMessage.textContent='Submitting...';formMessage.className='text-center min-h-[1.25rem] py-2 px-3 rounded-lg transition-all duration-300 text-blue-600 font-medium bg-blue-50 border border-blue-200';let photoUrl='';if (uploadedImageUrl){photoUrl=uploadedImageUrl;}else{photoUrl=document.getElementById('post-photo-url').value;}const postData={title: document.getElementById('post-title').value,description: document.getElementById('post-description').value,photoUrl: photoUrl,genre: document.getElementById('post-genre').value,tags: document.getElementById('post-tags').value,content: quill.root.innerHTML};let result;const postId=document.getElementById('post-id').value;if (postId){result=await updatePost(postId,postData);}else{result=await createPost(postData);}if (result.success){formMessage.textContent='✅ Your post has been submitted successfully! It will be reviewed and approved if it matches our guidelines.';formMessage.className='text-center min-h-[1.25rem] py-2 px-3 rounded-lg transition-all duration-300 text-green-600 font-medium bg-green-50 border border-green-200';setTimeout(()=>{document.getElementById('post-title').value='';document.getElementById('post-description').value='';document.getElementById('post-photo-url').value='';document.getElementById('post-genre').value='General';document.getElementById('post-tags').value='';quill.setText('');uploadedImageUrl=null;if (fileInput) fileInput.value='';if (uploadPreview) uploadPreview.classList.add('hidden');if (uploadProgress) uploadProgress.classList.add('hidden');if (urlTab && uploadTab){urlTab.click();}document.getElementById('post-id').value='';document.getElementById('submit-post-button').textContent='Submit for Review';document.getElementById('page-title').textContent='Blog Editor';document.getElementById('page-subtitle').textContent='Your one-stop hub for student life,engineering marvels,and campus tales at GIKI Institute.';setTimeout(()=>{formMessage.textContent='';formMessage.className='text-center min-h-[1.25rem] py-2 px-3 rounded-lg transition-all duration-300';},2000);},3000);}else{formMessage.textContent=result.error;formMessage.className='text-center min-h-[1.25rem] py-2 px-3 rounded-lg transition-all duration-300 text-red-600 font-medium bg-red-50 border border-red-200';}});const previewButton=document.getElementById('preview-post-button');if (previewButton){previewButton.addEventListener('click',()=>{const title=document.getElementById('post-title').value || 'Untitled Post';const description=document.getElementById('post-description').value || 'No description provided';const content=quill ? quill.root.innerHTML : '<p>No content yet...</p>';let photoUrl='';if (uploadedImageUrl){photoUrl=uploadedImageUrl;}else{photoUrl=document.getElementById('post-photo-url').value;}const genre=document.getElementById('post-genre').value || 'General';const tags=document.getElementById('post-tags').value || '';const previewHTML=` <!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,initial-scale=1.0"> <title>Preview: ${title}</title> <script src="https: <link href="https: <style> body{font-family: 'Inter',sans-serif;}.ql-editor{font-size: 1.125rem;line-height: 1.75;}.ql-editor h1,.ql-editor h2,.ql-editor h3{margin-top: 1.5rem;margin-bottom: 0.75rem;}.ql-editor p{margin-bottom: 1rem;}.ql-editor ul,.ql-editor ol{margin-bottom: 1rem;padding-left: 1.5rem;}.ql-editor blockquote{border-left: 4px solid #e5e7eb;padding-left: 1rem;margin: 1rem 0;}</style> </head> <body class="bg-gray-50"> <div class="container mx-auto px-4 py-8 max-w-4xl"> <div class="bg-white rounded-xl shadow-lg overflow-hidden"> ${photoUrl ? `<img src="${photoUrl}" alt="Featured Image" class="w-full h-64 object-cover">` : ''}<div class="p-8"> <div class="mb-6"> <h1 class="text-4xl font-bold text-gray-800 mb-4">${title}</h1> <p class="text-lg text-gray-600 mb-4">${description}</p> <div class="flex items-center space-x-4 text-sm text-gray-500"> <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full">${genre}</span> ${tags ? `<span class="text-gray-600">Tags: ${tags}</span>` : ''}</div> </div> <div class="prose max-w-none"> <div class="ql-editor">${content}</div> </div> </div> </div> <div class="mt-8 text-center"> <button onclick="window.close()" class="bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors"> Close Preview </button> </div> </div> </body> </html> `;const previewWindow=window.open('','_blank','width=800,height=600,scrollbars=yes,resizable=yes');previewWindow.document.write(previewHTML);previewWindow.document.close();});}}const profileForm=document.getElementById('profile-form');if (profileForm){const displayNameInput=document.getElementById('display-name');const userEmailInput=document.getElementById('user-email');const userBioInput=document.getElementById('user-bio');const profilePicImg=document.getElementById('profile-pic');const photoUploadButton=document.querySelector('#profile-pic+button');const photoUploadInput=document.getElementById('photo-upload');const formMessage=document.getElementById('form-message');const loadProfileData=async (user)=>{if (!user) return;const result=await getUserProfile(user.uid);if (result.success){const profile=result.profile;displayNameInput.value=profile.displayName || '';userEmailInput.value=profile.email || '';userBioInput.value=profile.bio || '';if (profile.photoURL){profilePicImg.src=profile.photoURL;}}else{const newProfile={uid: user.uid,email: user.email,displayName: user.displayName || user.email.split('@')[0],photoURL: user.photoURL || '',createdAt: firebase.firestore.FieldValue.serverTimestamp()};await db.collection('users').doc(user.uid).set(newProfile);loadProfileData(user);}};if (photoUploadButton){photoUploadButton.addEventListener('click',()=> photoUploadInput.click());}if (photoUploadInput){photoUploadInput.addEventListener('change',async (e)=>{const file=e.target.files[0];const user=auth.currentUser;if (file && user){formMessage.textContent='Uploading...';const uploadResult=await uploadProfilePicture(user.uid,file);if (uploadResult.success){await updateUserProfile(user.uid,{photoURL: uploadResult.url});profilePicImg.src=uploadResult.url;formMessage.textContent='Photo updated!';}else{formMessage.textContent=uploadResult.error;}}});}profileForm.addEventListener('submit',async (e)=>{e.preventDefault();const user=auth.currentUser;if (user){formMessage.textContent='Saving...';const profileData={displayName: displayNameInput.value,bio: userBioInput.value};const result=await updateUserProfile(user.uid,profileData);if (result.success){formMessage.textContent='Profile saved successfully!';}else{formMessage.textContent=result.error;}}});const loadUserPosts=async (user)=>{if (!user) return;const myPostsContainer=document.getElementById('my-posts-container');if (!myPostsContainer) return;const result=await getPostsByAuthor(user.uid);myPostsContainer.innerHTML='';if (result.success && result.posts.length > 0){result.posts.forEach(post=>{const postElement=document.createElement('div');postElement.className='flex justify-between items-center p-4 border rounded-lg';let statusColor='bg-yellow-200 text-yellow-800';if (post.status==='approved'){statusColor='bg-green-200 text-green-800';}else if (post.status==='rejected'){statusColor='bg-red-200 text-red-800';}postElement.innerHTML=` <div> <a href="post.html?id=${post.id}" class="font-bold text-lg hover:text-blue-600">${post.title}</a> <p class="text-sm text-gray-500 mt-1">Status: <span class="px-2 py-1 rounded-full text-xs font-semibold ${statusColor}">${post.status}</span> </p> </div> <a href="write.html?edit=${post.id}" class="text-sm font-semibold text-blue-600 hover:underline">Edit</a> `;myPostsContainer.appendChild(postElement);});}else{myPostsContainer.innerHTML='<p class="text-gray-500">You have not written any posts yet.</p>';}};onAuthStateChange(user=>{if (user){loadProfileData(user);loadUserPosts(user);}else{window.location.href='login.html';}});}const recentPostsGrid=document.getElementById('recent-posts-grid');if (recentPostsGrid){const displayFeaturedPost=async ()=>{const result=await getFeaturedPost();if (result.success){const post=result.post;const featuredPostContainer=document.getElementById('featured-post');if (featuredPostContainer){featuredPostContainer.innerHTML=` <div class="bg-white rounded-xl shadow-lg overflow-hidden lg:flex"> <div class="lg:w-1/2"> <a href="post.html?id=${post.id}"><img class="h-64 lg:h-full w-full object-cover" src="${post.photoUrl || 'https: </div> <div class="p-8 lg:p-12 lg:w-1/2 flex flex-col justify-center"> <p class="text-sm text-blue-500 font-semibold">Featured Article</p> <a href="post.html?id=${post.id}"><h2 class="text-3xl font-bold mt-2 mb-4 hover:text-blue-600">${post.title}</h2></a> <p class="text-gray-600 mb-6">${post.description || ''}</p> <div class="flex items-center"><p class="font-semibold">${post.authorName}</p></div> </div> </div>`;}}};const displayApprovedPosts=async ()=>{const result=await getApprovedPosts();recentPostsGrid.innerHTML='';if (result.success && result.posts.length > 0){result.posts.forEach(post=>{if (post.isFeatured) return;const postCard=document.createElement('div');postCard.className='bg-white rounded-xl shadow-lg overflow-hidden transform hover:-translate-y-2 transition-transform duration-300';const postDate=post.createdAt ? post.createdAt.toDate().toLocaleDateString() : 'N/A';postCard.innerHTML=` <a href="post.html?id=${post.id}"><img class="h-48 w-full object-cover" src="${post.photoUrl || 'https: <div class="p-6"> <p class="text-sm text-gray-500 mb-2">${postDate}</p> <h4 class="text-xl font-semibold mb-3">${post.title}</h4> <p class="text-gray-600 text-sm mb-4">${post.description || ''}</p> <a href="post.html?id=${post.id}" class="font-semibold text-blue-600 hover:underline">Read More &rarr;</a> </div>`;recentPostsGrid.appendChild(postCard);});}else if (result.success){recentPostsGrid.innerHTML='<p class="text-gray-500">No posts have been approved yet.</p>';}};displayFeaturedPost();displayApprovedPosts();}if (document.getElementById('post-content')){const displaySinglePost=async ()=>{const urlParams=new URLSearchParams(window.location.search);const postId=urlParams.get('id');if (!postId){document.getElementById('post-title').textContent='Post not found!';return;}const postContent=document.getElementById('post-content');if (postContent){postContent.innerHTML='<div class="flex justify-center items-center py-8"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div></div>';}const result=await getPostById(postId);if (result.success){const post=result.post;document.title=`${post.title}-GIKI Chronicles`;document.getElementById('post-title').textContent=post.title;const postDate=post.createdAt ? post.createdAt.toDate().toLocaleDateString() : 'N/A';document.getElementById('post-meta').textContent=`Posted by ${post.authorName}on ${postDate}`;if (post.photoUrl){document.getElementById('post-image').src=post.photoUrl;}else{document.getElementById('post-image').style.display='none';}document.getElementById('post-content').innerHTML=post.content;applyThemeToPostContent();setTimeout(()=>{if (typeof initializeCommentsAndReactions==='function'){initializeCommentsAndReactions(postId);}else{console.warn('initializeCommentsAndReactions function not found');}},2000);}else{document.getElementById('post-title').textContent='Error';}};const applyThemeToPostContent=()=>{const postContent=document.getElementById('post-content');if (!postContent) return;const currentTheme=localStorage.getItem('selected-theme') || 'basic-dark';const isDarkTheme=currentTheme==='basic-dark';const textElements=postContent.querySelectorAll('h1,h2,h3,h4,h5,h6,p,li,span,div,blockquote,code,pre,strong,em,a,ul,ol');textElements.forEach(element=>{if (element.style.color && element.style.color.includes('var(--')){return;}if (isDarkTheme){element.classList.add('theme-basic-dark');element.classList.remove('theme-basic-light','theme-giki');if (element.tagName==='A'){element.style.color='#60a5fa';}if (element.tagName==='CODE'){element.style.backgroundColor='#1f2937';element.style.color='#f9fafb';}if (element.tagName==='PRE'){element.style.backgroundColor='#1f2937';element.style.color='#f9fafb';}if (element.tagName==='BLOCKQUOTE'){element.style.color='#9ca3af';element.style.borderLeftColor='#4b5563';}}else{element.classList.add('theme-basic-light');element.classList.remove('theme-basic-dark','theme-giki');if (element.tagName==='A'){element.style.color='#2563eb';}if (element.tagName==='CODE'){element.style.backgroundColor='#f8f9fa';element.style.color='#1f2937';}if (element.tagName==='PRE'){element.style.backgroundColor='#f8f9fa';element.style.color='#1f2937';}if (element.tagName==='BLOCKQUOTE'){element.style.color='#6b7280';element.style.borderLeftColor='#e5e7eb';}}});};window.applyThemeToPostContent=applyThemeToPostContent;const themeSelect=document.getElementById('theme-select');if (themeSelect){themeSelect.addEventListener('change',()=>{setTimeout(()=>{applyThemeToPostContent();},100);});}const postContent=document.getElementById('post-content');if (postContent){const observer=new MutationObserver((mutations)=>{mutations.forEach((mutation)=>{if (mutation.type==='childList' && mutation.addedNodes.length > 0){setTimeout(()=>{applyThemeToPostContent();},50);}});});observer.observe(postContent,{childList: true,subtree: true});}setTimeout(()=>{applyThemeToPostContent();},200);displaySinglePost();}const contactForm=document.getElementById('contact-form');if (contactForm){contactForm.addEventListener('submit',async (e)=>{e.preventDefault();const formMessage=document.getElementById('form-message');formMessage.textContent='Sending...';const submissionData={name: contactForm.name.value,email: contactForm.email.value,subject: contactForm.subject.value,message: contactForm.message.value};const result=await saveContactSubmission(submissionData);if (result.success){formMessage.textContent='Message sent successfully!';formMessage.classList.add('text-green-500');contactForm.reset();}else{formMessage.textContent=result.error;formMessage.classList.add('text-red-500');}});}window.addEventListener('authStateChanged',async (event)=>{const{user,initialized}=event.detail;if (initialized && user){if (typeof window.ensureUserDataLoaded==='function'){try{await window.ensureUserDataLoaded();}catch (error){console.error("App.js: Error ensuring user data loaded from custom event:",error);}}}});onAuthStateChange(async user=>{const userNav=document.getElementById('user-nav');const guestNav=document.getElementById('guest-nav');const mobileUserNav=document.getElementById('mobile-user-nav');const mobileGuestNav=document.getElementById('mobile-guest-nav');const adminAccessBtn=document.getElementById('admin-access-btn');const mobileAdminAccessBtn=document.getElementById('mobile-admin-access-btn');if (user){if (typeof window.ensureUserDataLoaded==='function'){try{const dataLoaded=await window.ensureUserDataLoaded();}catch (error){console.error("App.js: Error ensuring user data loaded:",error);}}if (userNav) userNav.style.display='flex';if (guestNav) guestNav.style.display='none';if (mobileUserNav) mobileUserNav.style.display='block';if (mobileGuestNav) mobileGuestNav.style.display='none';const sidebarUserNav=document.getElementById('sidebar-user-nav');const sidebarGuestNav=document.getElementById('sidebar-guest-nav');if (sidebarUserNav) sidebarUserNav.style.display='block';if (sidebarGuestNav) sidebarGuestNav.style.display='none';if (typeof checkUserAdminStatus==='function'){try{const isAdmin=await checkUserAdminStatus();if (isAdmin && adminAccessBtn){adminAccessBtn.style.display='inline-block';}if (isAdmin && mobileAdminAccessBtn){mobileAdminAccessBtn.style.display='block';}const sidebarAdminBtn=document.getElementById('sidebar-admin-access-btn');if (isAdmin && sidebarAdminBtn){sidebarAdminBtn.style.display='flex';}}catch (error){console.error("App.js: Error checking admin status:",error);}}}else{if (userNav) userNav.style.display='none';if (guestNav) guestNav.style.display='flex';if (mobileUserNav) mobileUserNav.style.display='none';if (mobileGuestNav) mobileGuestNav.style.display='block';if (adminAccessBtn) adminAccessBtn.style.display='none';if (mobileAdminAccessBtn) mobileAdminAccessBtn.style.display='none';const sidebarUserNav=document.getElementById('sidebar-user-nav');const sidebarGuestNav=document.getElementById('sidebar-guest-nav');if (sidebarUserNav) sidebarUserNav.style.display='none';if (sidebarGuestNav) sidebarGuestNav.style.display='block';const sidebarAdminBtn=document.getElementById('sidebar-admin-access-btn');if (sidebarAdminBtn) sidebarAdminBtn.style.display='none';}});const adminAccessBtn=document.getElementById('admin-access-btn');if (adminAccessBtn){adminAccessBtn.addEventListener('click',()=>{window.location.href='admin-access.html';});}const mobileAdminAccessBtn=document.getElementById('mobile-admin-access-btn');if (mobileAdminAccessBtn){mobileAdminAccessBtn.addEventListener('click',()=>{window.location.href='admin-access.html';});}const sidebarAdminAccessBtn=document.getElementById('sidebar-admin-access-btn');if (sidebarAdminAccessBtn){sidebarAdminAccessBtn.addEventListener('click',()=>{window.location.href='admin-access.html';});}const logoutButton=document.getElementById('logout-button');if (logoutButton){logoutButton.addEventListener('click',async ()=>{await logoutUser();window.location.href='index.html';});}const mobileLogoutButton=document.getElementById('mobile-logout-button');if (mobileLogoutButton){mobileLogoutButton.addEventListener('click',async ()=>{await logoutUser();window.location.href='index.html';});}const sidebarLogoutButton=document.getElementById('sidebar-logout-button');if (sidebarLogoutButton){sidebarLogoutButton.addEventListener('click',async ()=>{await logoutUser();window.location.href='index.html';});}const galleryGrid=document.getElementById('gallery-grid');if (galleryGrid){const highlightedPhotoSection=document.getElementById('highlighted-photo');const categoryFilter=document.getElementById('category-filter');const openModalBtn=document.getElementById('open-submission-modal');const closeModalBtn=document.getElementById('close-modal');const submissionModal=document.getElementById('submission-modal');const submissionForm=document.getElementById('submission-form');const formMessage=document.getElementById('form-message');let allPhotos=[];const renderGallery=(photos)=>{galleryGrid.innerHTML='';if (photos.length===0){galleryGrid.innerHTML=`<p class="text-gray-500">No photos found for this category.</p>`;return;}photos.forEach(photo=>{const photoCard=document.createElement('div');photoCard.className='bg-white rounded-xl shadow-lg overflow-hidden cursor-pointer transform hover:scale-105 transition-transform duration-200';photoCard.innerHTML=` <div class="relative bg-gray-100 flex items-center justify-center" style="height: 280px;"> <img src="${photo.imageUrl}" alt="${photo.caption}" class="max-w-full max-h-full object-contain" loading="lazy" data-fullsize="${photo.fullSizeUrl || photo.imageUrl}"> </div> <div class="p-4"> <p class="font-semibold mb-2">${photo.caption}</p> <p class="text-sm text-gray-500">${photo.category}</p> <p class="text-xs text-gray-400">By ${photo.uploaderName}</p> </div> `;photoCard.addEventListener('click',()=>{openFullscreenView(photo);});galleryGrid.appendChild(photoCard);});};let currentSlideIndex=0;let slideshowInterval;const loadPhotos=async ()=>{const result=await getGalleryPhotos();if (result.success){allPhotos=result.photos;renderGallery(allPhotos);loadHighlightedSlideshow();}};const loadHighlightedSlideshow=async ()=>{const result=await getHighlightedPhotos();if (result.success && result.photos.length > 0){const highlightedPhotos=result.photos;if (slideshowInterval){clearInterval(slideshowInterval);}const showSlide=(index)=>{const photo=highlightedPhotos[index];highlightedPhotoSection.innerHTML=` <div class="relative"> <div class="cursor-pointer transform hover:scale-105 transition-transform duration-200" onclick="openFullscreenView(${JSON.stringify(photo)})"> <div class="bg-gray-100 flex items-center justify-center rounded-xl" style="height: 400px;"> <img src="${photo.imageUrl}" alt="${photo.caption}" class="max-w-full max-h-full object-contain rounded-xl"> </div> ${highlightedPhotos.length > 1 ? ` <div class="absolute top-4 right-4 flex space-x-2"> ${highlightedPhotos.map((_,i)=> ` <div class="w-3 h-3 rounded-full ${i===index ? 'bg-white' : 'bg-white bg-opacity-50'}"></div> `).join('')}</div> ` : ''}</div> <div class="mt-4 text-center"> <h3 class="text-2xl font-bold text-gray-800 mb-2">${photo.caption}</h3> <p class="text-lg text-gray-600">${photo.category}</p> <p class="text-sm text-gray-500 mt-1">By ${photo.uploaderName}</p> </div> </div> `;};showSlide(0);if (highlightedPhotos.length > 1){slideshowInterval=setInterval(()=>{currentSlideIndex=(currentSlideIndex+1) % highlightedPhotos.length;showSlide(currentSlideIndex);},5000);}}else{if (allPhotos.length > 0){highlightedPhotoSection.innerHTML=` <div class="relative"> <div class="cursor-pointer transform hover:scale-105 transition-transform duration-200" onclick="openFullscreenView(${JSON.stringify(allPhotos[0])})"> <div class="bg-gray-100 flex items-center justify-center rounded-xl" style="height: 400px;"> <img src="${allPhotos[0].imageUrl}" alt="${allPhotos[0].caption}" class="max-w-full max-h-full object-contain rounded-xl"> </div> </div> <div class="mt-4 text-center"> <h3 class="text-2xl font-bold text-gray-800 mb-2">${allPhotos[0].caption}</h3> <p class="text-lg text-gray-600">${allPhotos[0].category}</p> <p class="text-sm text-gray-500 mt-1">By ${allPhotos[0].uploaderName}</p> </div> </div> `;}}};categoryFilter.addEventListener('change',()=>{const category=categoryFilter.value;if (category==='all'){renderGallery(allPhotos);}else{const filteredPhotos=allPhotos.filter(p=> p.category===category);renderGallery(filteredPhotos);}});openModalBtn.addEventListener('click',()=> submissionModal.classList.remove('hidden'));closeModalBtn.addEventListener('click',()=> submissionModal.classList.add('hidden'));submissionForm.addEventListener('submit',async (e)=>{e.preventDefault();const submitButton=submissionForm.querySelector('button[type="submit"]');const originalButtonText=submitButton.textContent;submitButton.disabled=true;submitButton.textContent='Uploading...';formMessage.textContent='Uploading...';const caption=document.getElementById('caption').value;const category=document.getElementById('photo-category').value;const file=document.getElementById('photo-upload').files[0];if (!file){formMessage.textContent='Please select a photo.';submitButton.disabled=false;submitButton.textContent=originalButtonText;return;}if (!category){formMessage.textContent='Please select a category.';submitButton.disabled=false;submitButton.textContent=originalButtonText;return;}const maxSize=10*1024*1024;if (file.size > maxSize){formMessage.textContent='File is too large. Please select an image under 10MB.';submitButton.disabled=false;submitButton.textContent=originalButtonText;return;}try{const result=await submitPhotoForReview(caption,category,file);if (result.success){formMessage.textContent='Photo added to gallery!';submitButton.textContent='Success!';setTimeout(()=>{submissionModal.classList.add('hidden');formMessage.textContent='';submissionForm.reset();submitButton.disabled=false;submitButton.textContent=originalButtonText;loadPhotos();},2000);}else{formMessage.textContent=result.error;submitButton.disabled=false;submitButton.textContent=originalButtonText;}}catch (error){console.error('Upload error:',error);formMessage.textContent='Upload failed. Please try again.';submitButton.disabled=false;submitButton.textContent=originalButtonText;}});loadPhotos();}window.openFullscreenView=function (photo){const fullscreenModal=document.createElement('div');fullscreenModal.className='fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 cursor-pointer';fullscreenModal.innerHTML=` <div class="relative w-full h-full flex items-center justify-center pointer-events-none"> <button onclick="this.parentElement.parentElement.remove()" class="absolute top-4 right-4 text-white bg-black bg-opacity-60 hover:bg-opacity-80 rounded-full w-12 h-12 flex items-center justify-center transition-all duration-200 transform hover:scale-110 shadow-lg backdrop-blur-sm z-10 pointer-events-auto"> <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http: <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> <img src="${photo.fullSizeUrl || photo.imageUrl}" alt="${photo.caption}" class="max-w-full max-h-full object-contain pointer-events-auto" style="max-height: calc(100vh-2rem);"> </div> `;fullscreenModal.addEventListener('click',(e)=>{if (e.target===fullscreenModal){fullscreenModal.remove();}});document.addEventListener('keydown',function closeOnEscape(e){if (e.key==='Escape'){fullscreenModal.remove();document.removeEventListener('keydown',closeOnEscape);}});document.body.appendChild(fullscreenModal);};window.toggleHighlight=async function (photoId,isHighlighted){const result=await togglePhotoHighlight(photoId,isHighlighted);if (result.success){loadPhotos();}else{alert('Failed to update photo status. Please try again.');}};const adminContent=document.getElementById('admin-content');if (adminContent){const loadingMessage=document.getElementById('loading-message');const postsContainer=document.getElementById('posts-container');const refreshPostsBtn=document.getElementById('refresh-posts-btn');let currentTab='all';const tabButtons={'all': document.getElementById('tab-all'),'pending': document.getElementById('tab-pending'),'approved': document.getElementById('tab-approved'),'rejected': document.getElementById('tab-rejected')};Object.keys(tabButtons).forEach(tab=>{if (tabButtons[tab]){tabButtons[tab].addEventListener('click',()=>{currentTab=tab;updateTabStyles();displayPosts();});}});function updateTabStyles(){Object.keys(tabButtons).forEach(tab=>{if (tabButtons[tab]){if (tab===currentTab){tabButtons[tab].className='tab-btn px-4 py-2 rounded-md font-medium transition-colors bg-blue-500 text-white';}else{tabButtons[tab].className='tab-btn px-4 py-2 rounded-md font-medium transition-colors text-gray-700 hover:bg-white';}}});}if (refreshPostsBtn){refreshPostsBtn.addEventListener('click',()=>{displayPosts();});}const displayPosts=async ()=>{const result=await getAllPosts(currentTab);if (postsContainer){postsContainer.innerHTML='';if (result.success && result.posts.length > 0){result.posts.forEach(post=>{const postElement=createPostElement(post);postsContainer.appendChild(postElement);});}else{const statusText=currentTab==='all' ? 'posts' : currentTab+' posts';postsContainer.innerHTML=`<p class="text-gray-500">No ${statusText}found.</p>`;}}};function createPostElement(post){const postElement=document.createElement('div');postElement.className='flex justify-between items-center p-4 border rounded-lg bg-white hover:bg-gray-50 transition-colors';const postDate=post.createdAt ? post.createdAt.toDate().toLocaleDateString() : 'N/A';let statusColor='bg-yellow-200 text-yellow-800';if (post.status==='approved'){statusColor='bg-green-200 text-green-800';}else if (post.status==='rejected'){statusColor='bg-red-200 text-red-800';}postElement.innerHTML=` <div class="flex-1"> <div class="flex items-center space-x-3"> <h3 class="font-bold text-lg">${post.title}</h3> <span class="px-2 py-1 rounded-full text-xs font-semibold ${statusColor}">${post.status}</span> </div> <p class="text-sm text-gray-500 mt-1">By: ${post.authorName}• ${postDate}</p> <p class="text-sm text-gray-600 mt-1">${post.description || 'No description'}</p> </div> <div class="flex space-x-2"> <button data-id="${post.id}" class="view-btn bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-semibold hover:bg-blue-600">View</button> ${post.status==='pending' ? ` <button data-id="${post.id}" class="approve-btn bg-green-500 text-white px-3 py-1 rounded-full text-sm font-semibold hover:bg-green-600">Approve</button> <button data-id="${post.id}" class="reject-btn bg-red-500 text-white px-3 py-1 rounded-full text-sm font-semibold hover:bg-red-600">Reject</button> ` : ''}<button data-id="${post.id}" class="delete-btn bg-red-600 text-white px-3 py-1 rounded-full text-sm font-semibold hover:bg-red-700">Delete</button> </div> `;const viewBtn=postElement.querySelector('.view-btn');if (viewBtn){viewBtn.addEventListener('click',()=> viewPost(post));}const approveBtn=postElement.querySelector('.approve-btn');if (approveBtn){approveBtn.addEventListener('click',async (e)=>{const postId=e.target.dataset.id;await updatePostStatus(postId,'approved');displayPosts();});}const rejectBtn=postElement.querySelector('.reject-btn');if (rejectBtn){rejectBtn.addEventListener('click',async (e)=>{const postId=e.target.dataset.id;await updatePostStatus(postId,'rejected');displayPosts();});}const deleteBtn=postElement.querySelector('.delete-btn');if (deleteBtn){deleteBtn.addEventListener('click',(e)=>{const postId=e.target.dataset.id;showDeleteConfirmation(postId,post.title);});}return postElement;}function viewPost(post){const modal=document.getElementById('post-content-modal');const modalContent=document.getElementById('modal-post-content');const modalApproveBtn=document.getElementById('modal-approve-btn');const modalRejectBtn=document.getElementById('modal-reject-btn');if (modal && modalContent){modalContent.innerHTML=` <h1 class="text-3xl font-bold mb-4">${post.title}</h1> <div class="text-sm text-gray-500 mb-4"> By ${post.authorName}• ${post.createdAt ? post.createdAt.toDate().toLocaleDateString() : 'N/A'}</div> <div class="prose max-w-none"> ${post.content}</div> `;if (modalApproveBtn && modalRejectBtn){if (post.status==='pending'){modalApproveBtn.style.display='inline-block';modalRejectBtn.style.display='inline-block';modalApproveBtn.onclick=()=>{updatePostStatus(post.id,'approved');modal.classList.add('hidden');displayPosts();};modalRejectBtn.onclick=()=>{updatePostStatus(post.id,'rejected');modal.classList.add('hidden');displayPosts();};}else{modalApproveBtn.style.display='none';modalRejectBtn.style.display='none';}}modal.classList.remove('hidden');}}function showDeleteConfirmation(postId,postTitle){const modal=document.getElementById('delete-confirmation-modal');const postIdSpan=document.getElementById('delete-post-id');const confirmBtn=document.getElementById('confirm-delete-btn');const cancelBtn=document.getElementById('cancel-delete-btn');if (modal && postIdSpan && confirmBtn && cancelBtn){postIdSpan.textContent=postId;confirmBtn.onclick=async ()=>{const result=await deletePostPermanently(postId);if (result.success){modal.classList.add('hidden');displayPosts();}else{alert('Error deleting post: '+result.error);}};cancelBtn.onclick=()=>{modal.classList.add('hidden');};modal.classList.remove('hidden');}}window.closePostModal=function(){const modal=document.getElementById('post-content-modal');if (modal){modal.classList.add('hidden');}};const deleteModal=document.getElementById('delete-confirmation-modal');if (deleteModal){deleteModal.addEventListener('click',(e)=>{if (e.target===deleteModal){deleteModal.classList.add('hidden');}});}const postModal=document.getElementById('post-content-modal');if (postModal){postModal.addEventListener('click',(e)=>{if (e.target===postModal){postModal.classList.add('hidden');}});}const checkAdminAndLoad=async ()=>{const hasSecureAccess=checkSecureAdminAccess();if (hasSecureAccess){loadingMessage.style.display='none';adminContent.style.display='block';displayPosts();displayPendingEvents();displayPendingGalleryPhotos();return;}const forceAdmin=false;if (forceAdmin){loadingMessage.style.display='none';adminContent.style.display='block';displayPosts();displayPendingEvents();displayPendingGalleryPhotos();return;}const testResult=await testAdminStatus();const isAdmin=typeof checkUserAdminStatus==='function' ? await checkUserAdminStatus() : false;if (isAdmin){loadingMessage.style.display='none';adminContent.style.display='block';displayPosts();displayPendingEvents();displayPendingGalleryPhotos();}else{loadingMessage.innerHTML='<p class="text-lg text-red-500">Access Denied. You must be an administrator to view this page.</p>';}};onAuthStateChange(user=>{if (user){checkAdminAndLoad();}else{window.location.href='login.html';}});}const displayApprovedPostsAdmin=async ()=>{const result=await getApprovedPosts();approvedPostsContainer.innerHTML='';if (result.success && result.posts.length > 0){result.posts.forEach(post=>{const postElement=document.createElement('div');postElement.className='flex justify-between items-center p-4 border rounded-lg bg-white';const featureButtonText=post.isFeatured ? 'Unfeature' : 'Feature';const featureButtonClass=post.isFeatured ? 'bg-yellow-500 hover:bg-yellow-600' : 'bg-blue-500 hover:bg-blue-600';postElement.innerHTML=` <div> <p class="font-bold text-lg">${post.title}</p> <p class="text-sm text-gray-500">By: ${post.authorName}</p> </div> <div class="flex space-x-2"> <button data-id="${post.id}" data-featured="${post.isFeatured}" class="feature-btn ${featureButtonClass}text-white px-3 py-1 rounded-full text-sm font-semibold">${featureButtonText}</button> </div> `;approvedPostsContainer.appendChild(postElement);});}else{approvedPostsContainer.innerHTML='<p class="text-gray-500">There are no approved posts to feature.</p>';}document.querySelectorAll('.feature-btn').forEach(button=>{button.addEventListener('click',async (e)=>{const postId=e.target.dataset.id;const isCurrentlyFeatured=e.target.dataset.featured==='true';await toggleFeaturedStatus(postId,!isCurrentlyFeatured);displayApprovedPostsAdmin();});});};const displayPendingEvents=async ()=>{const pendingEventsContainer=document.getElementById('pending-events-container');if (!pendingEventsContainer){console.error('Pending events container not found');return;}try{const result=await getPendingEvents();if (result.success && result.events && result.events.length > 0){pendingEventsContainer.innerHTML='';result.events.forEach(event=>{const eventElement=document.createElement('div');eventElement.className='bg-white border rounded-lg p-4 shadow-sm';const eventDate=event.date ? new Date(event.date).toLocaleDateString() : 'No date';const eventTime=event.time || 'No time';eventElement.innerHTML=` <div class="flex justify-between items-start"> <div class="flex-1"> <h3 class="font-bold text-lg text-gray-800">${event.name}</h3> <p class="text-sm text-gray-600 mt-1">${event.description}</p> <div class="flex items-center space-x-4 mt-2 text-sm text-gray-500"> <span>📅 ${eventDate}</span> <span>🕒 ${eventTime}</span> <span>📍 ${event.location || 'No location'}</span> </div> <p class="text-xs text-gray-400 mt-2">Submitted by: ${event.submittedBy || 'Unknown'}</p> </div> <div class="flex space-x-2 ml-4"> <button onclick="approveEvent('${event.id}')" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-sm font-medium transition-colors"> Approve </button> <button onclick="rejectEvent('${event.id}')" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm font-medium transition-colors"> Reject </button> </div> </div> `;pendingEventsContainer.appendChild(eventElement);});}else{pendingEventsContainer.innerHTML='<p class="text-gray-500">No pending events to review.</p>';}}catch (error){console.error('Error loading pending events:',error);pendingEventsContainer.innerHTML='<p class="text-red-500">Error loading pending events.</p>';}};const displayPendingGalleryPhotos=async ()=>{const pendingGalleryContainer=document.getElementById('pending-gallery-container');if (!pendingGalleryContainer){return;}try{const result=await getPendingGalleryPhotos();if (result.success && result.photos && result.photos.length > 0){pendingGalleryContainer.innerHTML='';result.photos.forEach(photo=>{const photoElement=document.createElement('div');photoElement.className='bg-white border rounded-lg p-4 shadow-sm';photoElement.innerHTML=` <div class="flex items-start space-x-4"> <div class="flex-shrink-0"> <img src="${photo.imageUrl}" alt="${photo.caption}" class="w-24 h-24 object-cover rounded-lg"> </div> <div class="flex-1"> <h3 class="font-bold text-lg text-gray-800">${photo.caption}</h3> <p class="text-sm text-gray-600 mt-1">Category: ${photo.category}</p> <p class="text-xs text-gray-400 mt-2">Submitted by: ${photo.uploaderName || 'Unknown'}</p> <p class="text-xs text-gray-400">Uploaded: ${photo.createdAt ? new Date(photo.createdAt.toDate ? photo.createdAt.toDate() : photo.createdAt).toLocaleDateString() : 'Unknown'}</p> </div> <div class="flex flex-col space-y-2"> <button onclick="approveGalleryPhoto('${photo.id}')" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-sm font-medium transition-colors"> Approve </button> <button onclick="rejectGalleryPhoto('${photo.id}')" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm font-medium transition-colors"> Reject </button> </div> </div> `;pendingGalleryContainer.appendChild(photoElement);});}else{pendingGalleryContainer.innerHTML='<p class="text-gray-500">No pending gallery photos to review.</p>';}}catch (error){console.error('Error loading pending gallery photos:',error);pendingGalleryContainer.innerHTML='<p class="text-red-500">Error loading pending gallery photos.</p>';}};window.approveEvent=async (eventId)=>{try{const result=await updateEventStatus(eventId,'approved');if (result.success){displayPendingEvents();}else{alert('Error approving event: '+result.error);}}catch (error){console.error('Error approving event:',error);alert('Error approving event');}};window.rejectEvent=async (eventId)=>{try{const result=await updateEventStatus(eventId,'rejected');if (result.success){displayPendingEvents();}else{alert('Error rejecting event: '+result.error);}}catch (error){console.error('Error rejecting event:',error);alert('Error rejecting event');}};window.approveGalleryPhoto=async (photoId)=>{try{const result=await updateGalleryPhotoStatus(photoId,'approved');if (result.success){displayPendingGalleryPhotos();}else{alert('Error approving photo: '+result.error);}}catch (error){console.error('Error approving photo:',error);alert('Error approving photo');}};window.rejectGalleryPhoto=async (photoId)=>{try{const result=await updateGalleryPhotoStatus(photoId,'rejected');if (result.success){displayPendingGalleryPhotos();}else{alert('Error rejecting photo: '+result.error);}}catch (error){console.error('Error rejecting photo:',error);alert('Error rejecting photo');}};});(function(){'use strict';let savedTheme=localStorage.getItem('selected-theme');if (!savedTheme){savedTheme='basic-dark';localStorage.setItem('selected-theme',savedTheme);}function applyTheme(themeName){document.documentElement.classList.remove('theme-basic-light','theme-basic-dark','theme-giki');document.body.classList.remove('theme-basic-light','theme-basic-dark','theme-giki');document.documentElement.classList.add(`theme-${themeName}`);document.body.classList.add(`theme-${themeName}`);localStorage.setItem('selected-theme',themeName);const themeSelect=document.getElementById('theme-select');if (themeSelect){themeSelect.value=themeName;}}function initializeTheme(){applyTheme(savedTheme);const themeSelect=document.getElementById('theme-select');if (themeSelect){themeSelect.value=savedTheme;themeSelect.addEventListener('change',function(){const selectedTheme=this.value;applyTheme(selectedTheme);});}}if (document.readyState==='loading'){document.addEventListener('DOMContentLoaded',initializeTheme);}else{initializeTheme();}applyTheme(savedTheme);setTimeout(()=>{if (!document.body.classList.contains(`theme-${savedTheme}`)){applyTheme(savedTheme);}},100);})();