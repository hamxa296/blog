rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.isAdmin == true;
    }

    function isActiveUser() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
             !get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.isBlocked;
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if true;
      allow create: if isActiveUser();
      allow update, delete: if isAdmin();
    }

    // User profiles
    match /userProfiles/{userId} {
      allow read: if isActiveUser() && (userId == request.auth.uid || isAdmin());
      allow write: if isActiveUser() && (userId == request.auth.uid || isAdmin());
    }

    // Contact form submissions
    match /submissions/{submissionId} {
      allow read, update, delete: if isAdmin();
      allow create: if true; // Anyone can submit contact form
    }

    // Admin audit log
    match /admin_audit_log/{logId} {
      allow read, write: if isAdmin();
    }

    // Gallery photos
    match /galleryPhotos/{photoId} {
      allow read: if true;
      allow update, delete: if isAdmin();
    }

    // Events
    match /events/{eventId} {
      allow read: if true;
      allow update, delete: if isAdmin();
    }

    // Comments
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isActiveUser();
      allow update, delete: if isActiveUser() && (resource.data.authorId == request.auth.uid || isAdmin());
    }

    // Freshman guide data
    match /artifacts/{appId}/public/data/freshmanGuide/{sectionId} {
      allow read, write: if isAdmin();
    }

    // User checklists for packing lists
    match /userChecklists/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}